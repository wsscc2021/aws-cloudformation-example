
Parameters:
  ProjectName:
    Type: String
    Description: "The project name for provisioned this resources"
    Default: wsscc2022

  OwnerTeamName:
    Type: String
    Description: "The team name for owned this resources"
    Default: TeamKorea

  Prefix:
    Type: String
    Description: "The prefix of resource's Name tag"
    Default: useast1-wsscc2022

Resources:
  #
  # VPC
  #
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-vpc'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  #
  # Internet Gateway
  #
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:  !Sub '${Prefix}-igw'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  #
  # Public Subnet
  #
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.10.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-public-subnet-a'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.10.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-public-subnet-b'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1c
      CidrBlock: 10.10.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-public-subnet-c'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  #
  # Private Subnet
  #
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.10.11.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-private-subnet-a'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName
  
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.10.12.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-private-subnet-b'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1c
      CidrBlock: 10.10.13.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-private-subnet-c'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  #
  # Data Subnet
  #
  DataSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.10.21.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-data-subnet-a'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName
  
  DataSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.10.22.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-data-subnet-b'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  DataSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1c
      CidrBlock: 10.10.23.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-data-subnet-c'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  #
  # NAT Gateway - EIP
  #
  NatGatewayAEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-natgateway-a-eip'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAEIP.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-natgateway-a'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  NatGatewayBEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-natgateway-b-eip'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayBEIP.AllocationId
      SubnetId: !Ref PublicSubnetB
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-natgateway-b'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  NatGatewayCEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-natgateway-c-eip'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  NatGatewayC:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayCEIP.AllocationId
      SubnetId: !Ref PublicSubnetC
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-natgateway-c'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  #
  # Public RouteTable
  #
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-public-rt'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
  
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB

  PublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetC

  #
  # Private RouteTable
  #
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-private-rt-a'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  DefaultPrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTableA
      NatGatewayId: !Ref NatGatewayA

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetA
  
  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-private-rt-b'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  DefaultPrivateRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTableB
      NatGatewayId: !Ref NatGatewayB

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      SubnetId: !Ref PrivateSubnetB

  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-private-rt-c'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  DefaultPrivateRouteC:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTableC
      NatGatewayId: !Ref NatGatewayC

  PrivateSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableC
      SubnetId: !Ref PrivateSubnetC

  #
  # Data RouteTable
  #
  DataRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Prefix}-data-rt'
        - Key: account
          Value: !Ref AWS::AccountId
        - Key: region
          Value: !Ref AWS::Region
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName

  DataSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DataRouteTable
      SubnetId: !Ref DataSubnetA

  DataSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DataRouteTable
      SubnetId: !Ref DataSubnetB
  
  DataSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DataRouteTable
      SubnetId: !Ref DataSubnetC