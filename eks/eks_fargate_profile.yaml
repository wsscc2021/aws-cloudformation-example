
Parameters:
  EKSClusterName:
    Description: 'The cluster name of eks'
    Type: String

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  ProjectName:
    Type: String
    Description: "The project name for provisioned this resources"
    Default: wsscc2022

  OwnerTeamName:
    Type: String
    Description: "The team name for owned this resources"
    Default: TeamKorea

  Prefix:
    Type: String
    Description: "The prefix of resource's Name tag"
    Default: useast1-wsscc2022

Resources:
  #
  # IAM Role (for pod execution)
  #
  Role:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub '${Prefix}-eks-fargate-profile-role'
      # Description: description
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - eks-fargate-pods.amazonaws.com
      # Policies: 
      #   - PolicyName: dynamodb-query
      #     PolicyDocument:
      #       Version: "2012-10-17"
      #       Statement:
      #         - Effect: Allow
      #           Action:
      #             - 'dynamodb:Query'
      #             - 'dynamodb:Scan'
      #           Resource: '*'
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy
      Tags: 
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName


  #
  # EKS - Fargate Profile
  #
  FargateProfile:
    Type: AWS::EKS::FargateProfile
    Properties: 
      FargateProfileName: !Sub '${Prefix}-eks-fargate-profile'
      ClusterName: !Ref EKSClusterName
      PodExecutionRoleArn: !GetAtt Role.Arn
      Selectors: 
        - Namespace: dev
          Labels:
            - Key: eks.amazonaws.com/fargate
              Value: 'true'
      Subnets: !Ref SubnetIds
      Tags: 
        - Key: project
          Value: !Ref ProjectName
        - Key: owner:team
          Value: !Ref OwnerTeamName
