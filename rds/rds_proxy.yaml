Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  
  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
  
  SecretId:
    Description: rds/example-rds-mysql-instance/admin-xspWKn <- arn:aws:secretsmanager:us-east-1:111111111111:secret:rds/example-rds-mysql-instance/admin-xspWKn
    Type: String

  DBClusterIdentifier:
    Type: String
  
  DBInstanceIdentifier:
    Type: String

  Owner:
    Type: String
    Description: "The team name for owned this resources"
    Default: TeamKorea

  Project:
    Type: String
    Description: "The project name for provisioned this resources"
    Default: Unicorn.Rental

  NamePrefix:
    Type: String
    Description: "The prefix of resource's Name tag"
    Default: Unicorn

Resources:
  #
  # IAM - Role
  #
  DBProxyRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub '${NamePrefix}-rds-mysql-proxy-role'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - rds.amazonaws.com
      Policies: 
        - PolicyName: GetSecretValue
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretId}'
        - PolicyName: DecryptSecretValue
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'kms:Decrypt'
                Resource: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${SecretId}'
      # ManagedPolicyArns: 
      #   - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Tags: 
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner
  
  #
  # RDS - DBProxy
  #
  DBProxy:
    Type: AWS::RDS::DBProxy
    Properties: 
      DBProxyName: !Sub '${NamePrefix}-rds-mysql-proxy'
      Auth: 
        - AuthScheme: SECRETS
          IAMAuth: DISABLED # DISABLED , REQUIRED
          SecretArn: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretId}'
      DebugLogging: true
      EngineFamily: MYSQL # MYSQL , POSTGRESQL
      RequireTLS: true
      RoleArn: !GetAtt DBProxyRole.Arn
      VpcSecurityGroupIds: !Ref SecurityGroupIds
      VpcSubnetIds: !Ref SubnetIds
      Tags: 
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner

  #
  # RDS - DBProxyTargetGroup
  #
  DBProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties: 
      TargetGroupName: default # currently, this property must be set to default
      DBProxyName: !Ref DBProxy
      # DBClusterIdentifiers: 
      #   - !Ref DBClusterIdentifier
      DBInstanceIdentifiers: 
        - !Ref DBInstanceIdentifier
      ConnectionPoolConfigurationInfo: 
        MaxConnectionsPercent: 100
