
Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>

  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName

  AMI:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id'

Resources:
  #
  # IAM Role
  #
  Role:
    Type: AWS::IAM::Role
    Properties: 
      # RoleName: example-ec2-role
      # Description: description
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
      # Policies: 
      #   - PolicyName: dynamodb-query
      #     PolicyDocument:
      #       Version: "2012-10-17"
      #       Statement:
      #         - Effect: Allow
      #           Action:
      #             - 'dynamodb:Query'
      #             - 'dynamodb:Scan'
      #           Resource: '*'
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags: 
        - Key: key01
          Value: value01

  #
  # IAM Instance Profile
  #
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: Role
    Properties: 
      # InstanceProfileName: example-ec2-instance-profile
      Path: /
      Roles: 
        - !Ref Role

  #
  # LaunchTemplate
  #
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: example-ecs-asg-lt
      LaunchTemplateData: 
        BlockDeviceMappings: 
          - DeviceName: /dev/xvda
            Ebs: 
              DeleteOnTermination: true
              VolumeType: gp3
              VolumeSize: 30
              Iops: 3000
              Throughput: 125
              Encrypted: true
              # KmsKeyId: String
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
          # Name: String
        ImageId: !Ref AMI
        InstanceInitiatedShutdownBehavior: terminate # stop , terminate
        InstanceType: c5.large
        KeyName: !Ref KeyPair
        # Monitoring: 
        SecurityGroupIds: !Ref SecurityGroupIds
        TagSpecifications: 
          - ResourceType: instance # instance, volume
            Tags: 
            - Key: Name
              Value: example-ecs-ec2
          - ResourceType: volume # instance, volume
            Tags: 
            - Key: Name
              Value: example-ecs-ec2
        UserData:
          Fn::Base64: ### Bootstrapping container instances
            !Sub |
              #!/bin/bash
              cat <<'EOF' >> /etc/ecs/ecs.config
              ECS_CLUSTER=example-ecs-cluster
              ECS_LOGLEVEL=info
              ECS_WARM_POOLS_CHECK=true
              EOF
      TagSpecifications: 
        - ResourceType: launch-template
          Tags: 
          - Key: Name
            Value: example-ecs-asg-lt

  #
  # Auto Scaling Group
  #
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: example-ecs-asg
      # CapacityRebalance: Boolean
      Cooldown: '120'
      DesiredCapacityType: units # units , vcpu , memory-mib
      DesiredCapacity: '3'
      MinSize: '3'
      MaxSize: '20'
      HealthCheckGracePeriod: 60
      HealthCheckType: EC2 # EC2 , ELB
      NewInstancesProtectedFromScaleIn: false
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber # DefaultVersionNumber , LatestVersionNumber
      Tags: 
        - PropagateAtLaunch: true
          Key: Name
          Value: example-ecs-ec2
      # TargetGroupARNs: 
      #   - String
      VPCZoneIdentifier: !Ref SubnetIds
  
  #
  # Warm Pool
  #
  WarmPool:
    Type: AWS::AutoScaling::WarmPool
    Properties: 
      AutoScalingGroupName: !Ref AutoScalingGroup
      InstanceReusePolicy: 
        ReuseOnScaleIn: true
      MaxGroupPreparedCapacity: 3
      MinSize: 3
      PoolState: Stopped # Hibernated | Running | Stopped
