
Parameters:
  ClusterName:
    Description: ex, example-ecs-cluster
    Type: String
  
  TaskDefinitionArn:
    Description: ex, arn:aws:ecs:us-east-1:242593025403:task-definition/foo-webapp-td:2
    Type: String
  
  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  TargetGroupArn:
    Description: ex, arn:aws:elasticloadbalancing:us-east-1:242593025403:targetgroup/foo-webapp-tg/b3cb1fa82626816d
    Type: String

Resources:
  #
  # ECS -Service
  #
  Service:
    Type: AWS::ECS::Service
    Properties: 
      ServiceName: foo-webapp-service
      Cluster: !Ref ClusterName
      TaskDefinition: !Ref TaskDefinitionArn
      # CapacityProviderStrategy: 
      #   - Base: Integer
      #     CapacityProvider: String
      #     Weight: Integer
      DeploymentController: 
        Type: ECS # ECS | CODE_DEPLOY | EXTERNAL
      DeploymentConfiguration:  # Only *ECS
        DeploymentCircuitBreaker: 
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 2
      EnableECSManagedTags: true
      EnableExecuteCommand: true
      LaunchType: EC2 # EC2 | EXTERNAL | FARGATE
      LoadBalancers: 
        - ContainerName: webapp
          ContainerPort: 5000
          # LoadBalancerName: !Ref LoadBalancerName
          TargetGroupArn: !Ref TargetGroupArn
      # HealthCheckGracePeriodSeconds: 60
      NetworkConfiguration: 
        AwsvpcConfiguration: 
          AssignPublicIp: DISABLED # DISABLED | ENABLED
          SecurityGroups: !Ref SecurityGroupIds
          Subnets: !Ref SubnetIds
      # PlacementConstraints: 
      #   - PlacementConstraint
      # PlacementStrategies: 
      #   - PlacementStrategy
      # PlatformVersion: String
      # PropagateTags: String
      # Role: String
      # SchedulingStrategy: String
      # ServiceRegistries: # CloudMap
      #   - ServiceRegistry
      
