
Parameters:
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>

Resources:
  #
  # IAM - Role (for RDS Monitoring)
  #
  MonitoringRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'monitoring.rds.amazonaws.com'
          Action: 'sts:AssumeRole'
  
  #
  # Secrets Manager - Secret
  #
  AuroraMasterSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: 'rds/aurora-postgresql/postgres'
      Description: 'This is secret of rds username and password'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: 'password'
        ExcludeCharacters: '"@/\'
        PasswordLength: 16

  #
  # Secrets Manager - TargetAttachment
  #
  AuroraMasterSecretTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref AuroraMasterSecret
      TargetId: !Ref AuroraPostgresqlCluster
      TargetType: AWS::RDS::DBCluster

  #
  # RDS - Parameter Group
  #
  ClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties: 
      Description: 'This is cluster parameter group of aurora-postgresql13'
      Family: aurora-postgresql13
      Parameters:
        timezone: US/Eastern
        synchronous_commit: 'on'

  #
  # RDS - Parameter Group
  #
  ParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties: 
      Description: 'This is parameter group of aurora-postgresql13'
      Family: aurora-postgresql13
      # Parameters: 
      #   Key : Value

  #
  # RDS - Subnet Group
  #
  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: 'This is subnet group of example'
      DBSubnetGroupName: aurora-postgresql-subnet-group
      SubnetIds: !Ref Subnets

  #
  # RDS - DBCluster
  #
  AuroraPostgresqlCluster:
    Type: AWS::RDS::DBCluster
    Properties: 
      DBClusterIdentifier: aurora-postgresql-cluster
      Engine: aurora-postgresql # aurora (mysql5.6) , aurora-mysql (mysql5.7) , aurora-postgresql
      EngineMode: provisioned # provisioned , serverless , parallelquery , global , multimaster
      EngineVersion: '13.6'
      DBClusterParameterGroupName: !Ref ClusterParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      DatabaseName: exampledb
      DeletionProtection: false
      BackupRetentionPeriod: 7 # days
      CopyTagsToSnapshot: true
      EnableCloudwatchLogsExports: # postgresql
        - postgresql
      EnableIAMDatabaseAuthentication: true
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref AuroraMasterSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref AuroraMasterSecret, ':SecretString:password}}' ]]
      Port: 5432
      StorageEncrypted: true
      # KmsKeyId: String
      VpcSecurityGroupIds: !Ref SecurityGroups
      Tags: 
        - Key: key01
          Value: value01

  #
  # RDS - DBInstance (first)
  #
  AuroraPostgresqlInstance1:
    Type: AWS::RDS::DBInstance
    Properties: 
      DBClusterIdentifier: !Ref AuroraPostgresqlCluster
      DBInstanceIdentifier: aurora-postgresql-instance-1
      Engine: aurora-postgresql
      # EngineVersion: '13.6'
      DBInstanceClass: db.t4g.medium
      DBParameterGroupName: !Ref ParameterGroup
      PubliclyAccessible: false
      MonitoringInterval: 60 # 0 , 1 , 5 , 10 , 15 , 30 , 60
      MonitoringRoleArn: !GetAtt MonitoringRole.Arn
      DeleteAutomatedBackups: false    
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      EnablePerformanceInsights: true # it does support aurora postgresql
      # PerformanceInsightsKMSKeyId: String
      PerformanceInsightsRetentionPeriod: 7 # 7 , 731 (days)
      Tags: 
        - Key: key01
          Value: value01
  
  #
  # RDS - DBInstance (second)
  #
  AuroraPostgresqlInstance2:
    Type: AWS::RDS::DBInstance
    Properties: 
      DBClusterIdentifier: !Ref AuroraPostgresqlCluster
      DBInstanceIdentifier: aurora-postgresql-instance-2
      Engine: aurora-postgresql
      # EngineVersion: '13.6'
      DBInstanceClass: db.t4g.medium
      DBParameterGroupName: !Ref ParameterGroup
      PubliclyAccessible: false
      MonitoringInterval: 60 # 0 , 1 , 5 , 10 , 15 , 30 , 60
      MonitoringRoleArn: !GetAtt MonitoringRole.Arn
      DeleteAutomatedBackups: false    
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      EnablePerformanceInsights: true # it does support aurora postgresql
      # PerformanceInsightsKMSKeyId: String
      PerformanceInsightsRetentionPeriod: 7 # 7 , 731 (days)
      Tags: 
        - Key: key01
          Value: value01